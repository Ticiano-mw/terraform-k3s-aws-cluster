module "vpc" {
  source  = "terraform-aws-modules/vpc/aws"
  version = "2.44.0" #latest today

  name = "rancher-server"
  cidr = "10.30.0.0/21"

  azs             = ["eu-central-1a", "eu-central-1b", "eu-central-1c"]
  public_subnets  = ["10.30.1.0/24", "10.30.2.0/24", "10.30.3.0/24"]
  private_subnets = ["10.30.4.0/24", "10.30.5.0/24", "10.30.6.0/24"]

  create_database_subnet_group = false

  enable_dns_hostnames = true
  enable_dns_support   = true
  enable_nat_gateway   = true

  tags = {
    "Terraform"   = "true",
    "Environment" = "Test"
  }
}

data "aws_ami" "ubuntu" {
  most_recent = true
  owners      = ["099720109477"]

  filter {
    name   = "name"
    values = ["ubuntu-minimal/images/*/ubuntu-bionic-18.04-*"]
  }

  filter {
    name   = "virtualization-type"
    values = ["hvm"]
  }

  filter {
    name   = "root-device-type"
    values = ["ebs"]
  }

  filter {
    name   = "architecture"
    values = ["x86_64"]
  }
}

resource "aws_security_group" "bastion" {
  name   = "bastion-sg"
  vpc_id = module.vpc.vpc_id
}

resource "aws_security_group_rule" "bastion_ssh" {
  type              = "ingress"
  from_port         = 22
  to_port           = 22
  protocol          = "TCP"
  cidr_blocks       = ["0.0.0.0/0"]
  security_group_id = aws_security_group.bastion.id
}

resource "aws_security_group_rule" "bastion_egress_all" {
  type              = "egress"
  from_port         = 0
  to_port           = 0
  protocol          = "-1"
  cidr_blocks       = ["0.0.0.0/0"]
  security_group_id = aws_security_group.bastion.id
}

resource "aws_instance" "bastion" {
  ami           = data.aws_ami.ubuntu.id
  instance_type = "t3.micro"
  subnet_id     = element(module.vpc.public_subnets, 0)
  user_data = templatefile("${path.module}/files/bastion.tmpl",
  { ssh_keys = ["ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDgfSbr6ebJ10Kmab0IHydNrMyK/d1ll4DgBx/JHRTthwjeX7dh7Ht7ZfA7FIWc8LPmpiT0+pG0Ek7/SWcbbm7X69Lc6en5AGQ+/xKYFPvjeQrPr8DUeYPPIcdQmFsGJrQasjEQ2CXyDlQtf4D14fUlCtVeVG58fKHfuaFx4xcz4Ec/8PE4sG6AJUgNP3X2D7BAuDBQN8Pm8OJDeBw+4E7QS7/sEajqJsXgFnGOOQ1N/rQGXiIMSHvbT66yTdhAW3FbFZQS0efI+g69PbbQZ3rqJyiK4Br6htyIHjs6xcmSa89IgVZSXV+rwW/SBYnw0LcOJCdurcNT8rZXsfjeQHBt ticiano@trancos-laptop"] })

  vpc_security_group_ids = [aws_security_group.bastion.id, module.vpc.default_security_group_id]

  tags = {
    Name          = "rancher-bastion",
    "Terraform"   = "true",
    "Environment" = "Test"
  }
}

resource "random_password" "db_pass" {
  length  = 32
  special = false
}
resource "random_password" "rancher_pass" {
  length  = 20
  special = true
}
module "k3s_rancher" {
  source     = "./module/"
  vpc_id     = module.vpc.vpc_id
  aws_region = "eu-central-1"
  ## Rancher install details
  install_certmanager   = true
  certmanager_version   = "0.13.1" #latest version with 'no-webhook' support
  install_nginx_ingress = true
  install_rancher       = true
  rancher_version       = "2.4.5" #latest today
  rancher_password      = random_password.rancher_pass.result
  ## K3s cluster details
  install_k3s_version          = "1.0.1"
  server_node_count            = 1
  agent_node_count             = 3
  db_node_count                = 1
  server_instance_type         = "m5n.large"
  agent_instance_type          = "m5n.large"
  k3s_deploy_traefik           = false
  letsencrypt_email            = "tech@dodax.com"
  private_subnets              = module.vpc.private_subnets
  public_subnets               = module.vpc.public_subnets
  ssh_keys                     = ["ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDgfSbr6ebJ10Kmab0IHydNrMyK/d1ll4DgBx/JHRTthwjeX7dh7Ht7ZfA7FIWc8LPmpiT0+pG0Ek7/SWcbbm7X69Lc6en5AGQ+/xKYFPvjeQrPr8DUeYPPIcdQmFsGJrQasjEQ2CXyDlQtf4D14fUlCtVeVG58fKHfuaFx4xcz4Ec/8PE4sG6AJUgNP3X2D7BAuDBQN8Pm8OJDeBw+4E7QS7/sEajqJsXgFnGOOQ1N/rQGXiIMSHvbT66yTdhAW3FbFZQS0efI+g69PbbQZ3rqJyiK4Br6htyIHjs6xcmSa89IgVZSXV+rwW/SBYnw0LcOJCdurcNT8rZXsfjeQHBt ticiano@trancos-laptop"]
  name                         = "rancherv2"
  k3s_cluster_secret           = null # auto generated by module
  domain                       = "dodax-test.com"
  aws_azs                      = ["eu-central-1a", "eu-central-1b", "eu-central-1c"]
  k3s_storage_endpoint         = "postgres"
  db_instance_type             = "db.r5.large"
  db_name                      = "rancherv2"
  db_user                      = "rancher"
  db_pass                      = random_password.db_pass.result
  skip_final_snapshot          = true
  extra_server_security_groups = [module.vpc.default_security_group_id]
  extra_agent_security_groups  = [module.vpc.default_security_group_id]
  private_subnets_cidr_blocks  = module.vpc.private_subnets_cidr_blocks
  # public_subnets_cidr_blocks = module.vpc.public_subnets_cidr_blocks
  providers = {
    aws     = aws
    aws.r53 = aws.r53
  }
}
